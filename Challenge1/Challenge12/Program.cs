using System;
using System.Collections.Generic;
using System.Linq;

namespace Challenge12
{
    class Program
    {
        /*
         The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

            1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

            Let us list the factors of the first seven triangle numbers:

             1: 1
             3: 1,3
             6: 1,2,3,6
            10: 1,2,5,10
            15: 1,3,5,15
            21: 1,3,7,21
            28: 1,2,4,7,14,28
            We can see that 28 is the first triangle number to have over five divisors.

            What is the value of the first triangle number to have over five hundred divisors?
         
         */
        static void Main(string[] args)
        {
            List<ulong> numbers = new List<ulong>() { 1, 2 };
            
            while(numbers.Count < 50000)
            {
                ulong num = 0;
                for (int i = 1; i < numbers.Count; ++i)
                {
                    num += (ulong)i;
                }

                //Console.WriteLine(num);

                numbers.Add(num);

                // calculate how many #s have a remainder of 0
                // only need to calculate to each number of half

                /*
                int counter = 0;
                for(ulong i = 1; i < (num / 2) + 1; ++i)
                {
                    if (num % i == 0)
                        counter++;
                }

                bool overOneHundred = false;
                bool overThreeHundred = false;

                if(counter >= 500)
                {
                    if(counter > 100 && overOneHundred == false)
                    {
                        overOneHundred = true;
                        Console.WriteLine("over 100");
                    }
                    else if (counter > 300 && overThreeHundred == false)
                    {
                        overThreeHundred = true;
                        Console.WriteLine("over 300");
                    }

                    Console.WriteLine(num);
                    break;
                }*/
            } // end while

            Console.WriteLine(numbers.Count);

            for (int i = numbers.Count - 1; i < numbers.Count; i--)
            {
                ulong x = 1;
                int counter = 0;

                while(x < Math.Sqrt(numbers[i]))
                {
                    if(numbers[i] % x == 0)
                    {
                        counter++;
                        if(numbers[i] / x != x)
                        {
                            counter++;
                        }
                    }

                    x++;
                }

                if(counter >= 500)
                    Console.WriteLine($"{counter} : {numbers[i]}");
            }
        }
    }
}
